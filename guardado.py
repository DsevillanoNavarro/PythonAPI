#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Oct 24, 2024 12:30:55 PM CEST  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import guardado_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: guardado_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'default.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')    
    _style_code_ran = 1

class ventanaPrincipal:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+460+134")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("Menú")

        self.top = top

        self.btnMostrarNoticias = tk.Button(self.top)
        self.btnMostrarNoticias.place(relx=0.067, rely=0.071, height=51
                , width=151)
        self.btnMostrarNoticias.configure(activebackground="#d9d9d9")
        self.btnMostrarNoticias.configure(font="-family {DejaVu Sans} -size 10")
        self.btnMostrarNoticias.configure(text='''Mostrar Noticias''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.65, rely=0.067, relheight=0.567, relwidth=0.325)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.listaNoticias = tk.Listbox(self.Frame1)
        self.listaNoticias.place(relx=0.0, rely=0.0, relheight=1.161
                , relwidth=0.995)
        self.listaNoticias.configure(background="white")
        self.listaNoticias.configure(font="TkFixedFont")
        self.listaNoticias.configure(selectbackground="#d9d9d9")

        self.btnSalir = tk.Button(self.top)
        self.btnSalir.place(relx=0.85, rely=0.889, height=31, width=71)
        self.btnSalir.configure(activebackground="#d9d9d9")
        self.btnSalir.configure(font="-family {DejaVu Sans} -size 10")
        self.btnSalir.configure(text='''Salir''')

        _style_code()
        self.TEntry1 = ttk.Entry(self.top)
        self.TEntry1.place(relx=0.35, rely=0.244, relheight=0.047
                , relwidth=0.273)
        self.TEntry1.configure(font="-family {DejaVu Sans} -size 10")
        self.TEntry1.configure(cursor="xterm")

        self.btnBuscarNoticas = tk.Button(self.top)
        self.btnBuscarNoticas.place(relx=0.067, rely=0.218, height=51, width=151)

        self.btnBuscarNoticas.configure(activebackground="#d9d9d9")
        self.btnBuscarNoticas.configure(font="-family {DejaVu Sans} -size 10")
        self.btnBuscarNoticas.configure(text='''Buscar Noticas''')

        self.btnAnadirNoticias = tk.Button(self.top)
        self.btnAnadirNoticias.place(relx=0.067, rely=0.364, height=51
                , width=151)
        self.btnAnadirNoticias.configure(activebackground="#d9d9d9")
        self.btnAnadirNoticias.configure(font="-family {DejaVu Sans} -size 10")
        self.btnAnadirNoticias.configure(text='''Anadir Noticias''')

        self.btnBorrarNoticias = tk.Button(self.top)
        self.btnBorrarNoticias.place(relx=0.067, rely=0.516, height=51
                , width=151)
        self.btnBorrarNoticias.configure(activebackground="#d9d9d9")
        self.btnBorrarNoticias.configure(font="-family {DejaVu Sans} -size 10")
        self.btnBorrarNoticias.configure(text='''Borrar Noticias''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

class ventanaNoticias:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+731+198")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("Mostrar Noticias")

        self.top = top

        _style_code()
        self.tituloNoticia = ttk.Label(self.top)
        self.tituloNoticia.place(relx=0.05, rely=0.089, height=49, width=262)
        self.tituloNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.tituloNoticia.configure(relief="flat")
        self.tituloNoticia.configure(anchor='w')
        self.tituloNoticia.configure(justify='left')
        self.tituloNoticia.configure(text='''Tlabel''')
        self.tituloNoticia.configure(compound='left')

        self.Frame2 = tk.Frame(self.top)
        self.Frame2.place(relx=0.567, rely=0.067, relheight=0.522
                , relwidth=0.408)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")

        self.labelImage = tk.Label(self.Frame2)
        self.labelImage.place(relx=0.0, rely=-0.043, height=251, width=249)
        self.labelImage.configure(activebackground="#d9d9d9")
        self.labelImage.configure(anchor='w')
        self.labelImage.configure(compound='left')
        self.labelImage.configure(font="-family {DejaVu Sans} -size 10")
        self.labelImage.configure(text='''Label''')

        self.fechaNoticia = ttk.Label(self.top)
        self.fechaNoticia.place(relx=0.05, rely=0.444, height=19, width=42)
        self.fechaNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.fechaNoticia.configure(relief="flat")
        self.fechaNoticia.configure(anchor='w')
        self.fechaNoticia.configure(justify='left')
        self.fechaNoticia.configure(text='''Tlabel''')
        self.fechaNoticia.configure(compound='left')

        self.autorNoticia = ttk.Label(self.top)
        self.autorNoticia.place(relx=0.05, rely=0.267, height=59, width=272)
        self.autorNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.autorNoticia.configure(relief="flat")
        self.autorNoticia.configure(anchor='w')
        self.autorNoticia.configure(justify='left')
        self.autorNoticia.configure(text='''Tlabel''')
        self.autorNoticia.configure(compound='left')

        self.contenidoNoticia = ttk.Label(self.top)
        self.contenidoNoticia.place(relx=0.05, rely=0.622, height=149, width=552)

        self.contenidoNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.contenidoNoticia.configure(relief="flat")
        self.contenidoNoticia.configure(anchor='w')
        self.contenidoNoticia.configure(justify='left')
        self.contenidoNoticia.configure(text='''Tlabel''')
        self.contenidoNoticia.configure(compound='left')

class ventanaAnadeNoticias:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+411+277")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1,  1)
        top.title("Añadir Noticias")

        self.top = top

        _style_code()
        self.tituloNoticia = ttk.Label(self.top)
        self.tituloNoticia.place(relx=0.067, rely=0.089, height=39, width=72)
        self.tituloNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.tituloNoticia.configure(relief="flat")
        self.tituloNoticia.configure(anchor='w')
        self.tituloNoticia.configure(justify='left')
        self.tituloNoticia.configure(text='''TITULO:''')
        self.tituloNoticia.configure(compound='left')

        self.TEntry2 = ttk.Entry(self.top)
        self.TEntry2.place(relx=0.2, rely=0.111, relheight=0.047, relwidth=0.273)

        self.TEntry2.configure(font="-family {DejaVu Sans} -size 10")
        self.TEntry2.configure(cursor="xterm")

        self.TEntry3 = ttk.Entry(self.top)
        self.TEntry3.place(relx=0.2, rely=0.2, relheight=0.047, relwidth=0.273)
        self.TEntry3.configure(font="-family {DejaVu Sans} -size 10")
        self.TEntry3.configure(cursor="xterm")

        self.TLabel6 = ttk.Label(self.top)
        self.TLabel6.place(relx=0.067, rely=0.2, height=19, width=62)
        self.TLabel6.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel6.configure(relief="flat")
        self.TLabel6.configure(anchor='w')
        self.TLabel6.configure(justify='left')
        self.TLabel6.configure(text='''AUTOR:''')
        self.TLabel6.configure(compound='left')

        self.TEntry4 = ttk.Entry(self.top)
        self.TEntry4.place(relx=0.2, rely=0.289, relheight=0.047, relwidth=0.273)

        self.TEntry4.configure(font="-family {DejaVu Sans} -size 10")
        self.TEntry4.configure(cursor="xterm")

        self.TLabel7 = ttk.Label(self.top)
        self.TLabel7.place(relx=0.067, rely=0.289, height=19, width=62)
        self.TLabel7.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel7.configure(relief="flat")
        self.TLabel7.configure(anchor='w')
        self.TLabel7.configure(justify='left')
        self.TLabel7.configure(text='''FECHA:''')
        self.TLabel7.configure(compound='left')

        self.TLabel8 = ttk.Label(self.top)
        self.TLabel8.place(relx=0.067, rely=0.378, height=19, width=152)
        self.TLabel8.configure(font="-family {DejaVu Sans} -size 10")
        self.TLabel8.configure(relief="flat")
        self.TLabel8.configure(anchor='w')
        self.TLabel8.configure(justify='left')
        self.TLabel8.configure(text='''CONTENIDO''')
        self.TLabel8.configure(compound='left')

        self.btnAceptarNoticia = tk.Button(self.top)
        self.btnAceptarNoticia.place(relx=0.85, rely=0.911, height=31, width=71)
        self.btnAceptarNoticia.configure(activebackground="#d9d9d9")
        self.btnAceptarNoticia.configure(font="-family {DejaVu Sans} -size 10")
        self.btnAceptarNoticia.configure(text='''Aceptar''')

        self.Text1 = tk.Text(self.top)
        self.Text1.place(relx=0.05, rely=0.444, relheight=0.387, relwidth=0.91)
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(selectbackground="#d9d9d9")
        self.Text1.configure(wrap="word")

# Iniciar ventanas
def start_up():
    guardado_support.main()

if __name__ == '__main__':
    guardado_support.main()



import requests
from noticia import noticia
#Clave API
API_KEY = 'e2aadd0618274516a3f6c5f9d1511991'
url = f'https://newsapi.org/v2/top-headlines?country=us&apiKey={API_KEY}'
noticias = []
numSeleccionado= 0

def anadirNoticias():
    try:
        response = requests.get(url)
        response.raise_for_status()  # Lanza un error si la respuesta no es exitosa
        data = response.json()
        # Verificar si hay artículos en la respuesta
        if data['articles']:
            for i in range(10):
                noticias.append(noticia(
                    titulo=data['articles'][i]['title'],
                    contenido=data['articles'][i]['content'],
                    fecha_publicacion=data['articles'][i]['publishedAt'],
                    autor=data['articles'][i]['author']
                ))  
        else:
            print('No se encontraron artículos.')
    except requests.exceptions.HTTPError as http_err:
        print(f'Error HTTP: {http_err}')
    except Exception as err:
        print(f'Ocurrió un error: {err}')
anadirNoticias()

#def mostrarNoticias():



#def buscarNoticias():

